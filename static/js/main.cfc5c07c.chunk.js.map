{"version":3,"sources":["images/marble_bg.jpg","components/landingpage.js","components/aboutmepage.js","components/foodpage.js","components/projectspage.js","components/main.js","App.js","serviceWorker.js","index.js","images/cromadic.png","images/Gameshow.PNG"],"names":["module","exports","Landing","style","width","margin","className","col","href","rel","target","aria-hidden","Component","Food","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","bg","backgroundSize","backgroundPosition","borderColor","border","colored","bg2","onChange","tabId","setState","ripple","toggleCategories","Main","exact","path","component","LandingPage","AboutMe","FoodPage","Project","App","position","flex","fixedHeader","title","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfc5c07c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marble_bg.06a5b008.jpg\";","import React, {Component} from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport \"../App.css\";\r\n\r\nimport bg from '../images/marble_bg.jpg';\r\n\r\nclass Landing extends Component{\r\n    render() {\r\n        return(   \r\n\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                {/*This is how you comment. Has to be in a div*/}\r\n                <Grid className='landing-grid'>\r\n                    <Cell col={12}>\r\n                        <div className = 'banner-text'>\r\n                            <h1>Hello! My name is Kenneth Yam, and I am a Game Designer and Software Engineer.</h1>\r\n                            <p>C# 路 Python 路 C++ 路 React 路 HTML/CSS</p>\r\n\r\n                            <div className = 'profile-links'>\r\n                                <a href=\"https://www.linkedin.com/in/kenneth-yam-b89192195/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-linkedin-square\"  aria-hidden=\"true\"/>\r\n                                </a>\r\n                                <a href=\"https://github.com/kcyam\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-github-square\" aria-hidden=\"true\"/>\r\n                                </a>\r\n                                <a href=\"https://twitter.com/Chhances\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-twitter-square\" aria-hidden=\"true\"/>\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Landing;\r\n/*\r\nProfile pic?\r\nTwitter, Linkedin, Resume, Github\r\nFancy decorations\r\nMy main programming languages\r\n*/","import React, {Component} from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport \"./aboutme.css\";\r\n\r\nclass Food extends Component{\r\n    render() {\r\n        return(\r\n<div style={{width: '100%', margin: 'auto'}}>\r\n                {/*This is how you comment. Has to be in a div*/}\r\n                <Grid className='about-grid'>\r\n                    <Cell col={12}>\r\n                        <div className = 'about-text'>\r\n                            <h1>About Me</h1> \r\n                         \r\n                        </div>\r\n\r\n                    </Cell>\r\n                    <Cell col={12}>\r\n                        <div className = 'about-paragraph'>\r\n                            <p>\r\n                                Hi, my name is Kenneth, and I'm a UCI graduate. I majored in Computer Game Science \r\n                                with a specialization in Artificial Intelligence. During my I became an officer for osu! UCI, \r\n                                a club dedicated for the game, osu!, which I have been playing since 2011. I became\r\n                                the president during the Spring quarter of Junior year until my graduation.    \r\n                            </p>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n\r\n            </div>    \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Food;\r\n\r\n/*\r\nWent to UCI, major\r\nClub stuff\r\nHobbies\r\nWhat I like (world geography, how I got my DS (how I work for my goals))\r\nextra stuff I guess\r\n*/","import React, {Component} from 'react';\r\n\r\n\r\nclass Food extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Food Blog</h1>\r\n                <h3>I never ate out at fast food places or restuarants until I moved to UCI. Here, I want to talk about my experiences.</h3>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Food;\r\n","import React, {Component} from 'react';\r\nimport {Tabs, Tab, Grid, Cell, Card, CardTitle, CardText, CardActions, Button, CardMenu, IconButton} from 'react-mdl';\r\nimport bg from '../images/cromadic.png';\r\nimport bg2 from '../images/Gameshow.PNG';\r\n\r\n\r\nclass Projects extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {activeTab: 0};\r\n    }\r\n\r\n    toggleCategories(){\r\n        if(this.state.activeTab === 0){\r\n            return(\r\n                <div className='projects-grid'>\r\n                    \r\n\r\n                    <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n                        <CardTitle style={{color:'#fff', height: '160px' ,background:`url(${bg})`, backgroundSize:'cover',\r\n                                        backgroundPosition: 'center', borderColor:'black'}}>\r\n                            Cromadic\r\n                        </CardTitle>\r\n                        <CardText>Singleplayer adventure game created for Capstone project. Created in Unity.</CardText>\r\n                        <CardActions border>\r\n                        <Button colored>\r\n                            <a href=\"https://169anullptr.itch.io/cromadicgame\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                itch.io\r\n                            </a>\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n\r\n                    <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n                        <CardTitle style={{color:'#f22', height: '160px',background:`url(${bg2})`, backgroundSize:'cover',\r\n                                            backgroundPosition: 'center'}}>\r\n                            Gameshow Game\r\n                        </CardTitle>\r\n                        <CardText>Networked multiplayer party game with a gameshow theme. Created in Unity. </CardText>\r\n                        <CardActions border>\r\n                            <Button colored>\r\n                            <a href=\"https://www.linkedin.com/in/kenneth-yam-b89192195/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                Github\r\n                            </a>\r\n                            </Button>\r\n                                \r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        else if(this.state.activeTab === 1){\r\n            return(\r\n                <div><h1>These are projects I used for AI/Machine Learning</h1></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"category-tabs\">\r\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) =>\r\n                    this.setState({activeTab: tabId})} ripple>\r\n                        <Tab>Games</Tab>\r\n                        <Tab>AI</Tab>\r\n                </Tabs>\r\n\r\n                \r\n                <Grid>\r\n                    <Cell col={12}>\r\n                        <div className=\"content\">{this.toggleCategories()};</div>\r\n                    </Cell>\r\n                </Grid>\r\n                    \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport { Switch, Route, HashRouter, Link } from 'react-router-dom';\r\n\r\n//Main pages\r\nimport LandingPage from './landingpage';\r\nimport AboutMe from './aboutmepage';\r\nimport FoodPage from  './foodpage';\r\nimport Project from './projectspage';\r\n\r\n\r\n\r\nconst Main = () => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path='/' component = {LandingPage}/>\r\n            <Route exact path='/aboutme' component = {AboutMe}/>\r\n            <Route exact path='/food' component = {FoodPage}/>\r\n            <Route exact path='/projects' component = {Project}/>\r\n        </Switch>\r\n    </HashRouter>\r\n)\r\n\r\nexport default Main;\r\n","import React, {Component} from 'react';\nimport {Layout, Header, Textfield, Drawer, Navigation, Content} from 'react-mdl';\nimport {HashRouter, Route, Link, Router} from 'react-router-dom';\nimport Main from './components/main';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n\n    <div className=\"Landing\" style={{height: '100vh',margin: 'auto', position: 'relative', flex: 0}}>\n        <Layout fixedHeader>\n            <Header title=\"Kenneth Yam\">\n                <HashRouter>\n                  <div>        \n                  <Link to=\"/\" className = 'header-text'>Homepage</Link>\n                  <Link to=\"/aboutme\" className = 'header-text'>About Me</Link> \n                  <Link to=\"/projects\" className = 'header-text'>Projects</Link>\n                  <Link to=\"/food\" className = 'header-text'>Foods</Link>           \n                  </div>\n                </HashRouter>\n            </Header>\n\n            <Drawer title=\"Links\">\n              <HashRouter>\n                    <Link to=\"/\">Homepage</Link>\n                    <Link to=\"/projects\">Projects</Link>\n                    <Link to=\"/food\">Foods</Link>\n              </HashRouter>\n            </Drawer>\n            <Content>\n              <div className='page-content' />\n              <Main/>\n            </Content>\n\n        </Layout>\n    </div>\n  );\n  \n}\n\nexport default App;\n/*npm run deploy to update*/\n/* If I want to make a search bar\n<Textfield\n    value=\"Find Doesn't Work\"\n    onChange={() => {}}\n    label=\"Search\"\n    expandable\n    expandableIcon=\"search\"\n/>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cromadic.6e10cc02.png\";","module.exports = __webpack_public_path__ + \"static/media/Gameshow.ea2984b4.PNG\";"],"sourceRoot":""}